
- name: create collector directories on host
  file:
    path: "{{ collector.path }}/data"
    state: directory

- name: write kubernetes config file
  copy:
      src: kube-config
      dest: "{{ collector.path }}/kube-config"

- name: write bitflow script template
  template:
    src: notify-controller.bf.j2
    dest: "{{ collector.path }}/notify-controller.bf"

- name: start the collector docker container
  tags: [ docker-container, collector ]
  docker_container:
    image: "{{ collector.image }}"
    name: "{{ collector.container_name }}"
    hostname: "{{ inventory_hostname }}"
    state: started
    pid_mode: host
    network_mode: host
    pull: true
    privileged: "yes"
    restart_policy: always
    ports:
    - "{{ collector.api_port }}:{{ collector.api_port }}"
    - "{{ collector.http_data_port }}:{{ collector.http_data_port }}"
    volumes:
      - "{{ collector.libvirt.socket }}:{{ collector.libvirt.socket_mounted }}"
      - "{{ collector.path }}:{{ collector.path_mounted }}"
      - "/etc/localtime:/etc/localtime:ro"
    # The component tag is created in the notify-controller.bf script and results in a separate folder for each VM and hypervisor
    command: |
      -files-buf 256
      -files-check-output 2s
      -ci 500ms
      -si 500ms
      -api :{{ collector.api_port }}
      -f {{ collector.path_mounted }}/notify-controller.bf
      -o files://{{ collector.path_mounted }}/data/${component}/data.bin
      {{ collector.extra_args }}
